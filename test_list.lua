#!/usr/bin/env lua
-- Copyright © 2025 Mark Summerfield. All rights reserved.

local List = require("list")
local check, report = require("check").checker()

local a = List()
check(tostring(a) == "[]")
local b = List(12, 6, 1, 0, 1, 2, 4, 8, 16)
check(tostring(b) == "[12 6 1 0 1 2 4 8 16]")
local c = List("a", "b", "c or d")
check(tostring(c) == "[«a» «b» «c or d»]")
check(a:typeof() == "List")
check(#a == 0, a)
check(#b == 9, b)
check(#c == 3, c)
check(a:get(6) == nil)
check(b:get(6) == 2)
check(c:get(3) == "c or d")
a:append(6, 88)
b:set(6, 14)
c:set(3, "c")
check(a:get(2) == 88)
check(#a == 2, a)
check(a:get(20) == nil)
check(b:get(6) == 14)
check(c:get(3) == "c")
check(b:find(1) == 3)
check(b:rfind(1) == 5)
check(b:find(8) == 8)
check(b:find(18) == nil)
check(c:find("c") == 3)
check(c:find("b") == 2)
check(c:rfind("b") == 2)
check(c:contains("b"))
check(not c:contains("x"))
check(b:contains(16))
check(not b:contains(999))
b:sort()
check(b:find(1) == 2)
check(b:rfind(1) == 3)
check(b:find(8) == 6)
check(b:find(18) == nil)
local function hitolo(x, y)
    return x > y
end
b:sort(hitolo)
check(b:find(1) == 7)
check(b:rfind(1) == 8)
check(b:find(8) == 4)
check(b:find(18) == nil)

report("List")
